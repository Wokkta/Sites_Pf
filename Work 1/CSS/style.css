@import url(reset.css);
*{
	box-sizing: border-box;
}
body{
	counter-reset: list;
}
.item::before{
	content: counter(list);
	counter-increment: list;
}
.item:nth-child(even){
	background-color: #00CCA0;
}
.item{
	background-color: #009070;
	font-size: 22px;
	font-family: sans-serif;
	font-weight: 700;
	border:  2px solid black;
	display: flex;
	border-radius: 5px;
	justify-content: center;
	align-items: center;
}/* 1st part of code 
.box{
	display: grid;
	/*grid-template-columns:300px 250px 300px ; or */
	/*grid-template-columns: 1fr 1fr 1fr;  fractions as parts of parent, this like 3 columns with w33% 
	or you can make it responsive to content by doing grid-template-columns:  minmax(200px,400px) 1fr 1fr; */
	/* if don't want to write every time 1fr and same stuff you can do this *//*
	grid-template-columns:  repeat(3, 1fr);
	/* grid-template-rows: 100px 200px;  height + has problems with content size, opposite we can do 'next string'*//*
	grid-auto-rows: minmax(200px,auto);
	grid-column-gap: 30px; /* distance between columns , next string is same , but for vertical*//*
	grid-row-gap: 10px;
	/* or u can use that - grid-gap: 30px; or grid-gap:10px 30px;   *//*
}

.item:nth-child(1){
	grid-column: 2	; /* position at grid *//*
	grid-column: 1 / 4;/* растягивается по линиям таблицы, поэтому работает странно*//*
	grid-row:  2; /* vertical position *//*
}
.item:nth-child(2){
	grid-column: 1 / 3;

}
.item:nth-child(5){
	grid-column: span 2; /* span - taking more place from previous position *//*
}
*/
/* second part 
.box{
	display: grid;
	
	grid-template-columns:  1fr 2fr;
	
	grid-gap: 10px 30px;
	grid-template-areas:
	 'header header' 
	 'aside content'
	 'footer footer';
	height: 20vh;
}
.header{
	grid-area:  header;
}
.aside{
	grid-area:  aside;
}
.content{
	grid-area:  content;
}
.footer{
	grid-area:  footer;
}
*/
/* 3rd part of code */
.box{
	grid-column: 2;
	grid-row: 2;
	display: grid;
	height: 800px;
	width: 80vw;
	grid-template-columns: repeat(5, 1fr);
	grid-template-rows: repeat(6, 1fr);
	grid-gap:  10px;
}
body{
	display: grid;
	height: 100vh;	
	grid-template-columns: 1fr 1fr 1fr;
	grid-template-rows: repeat(3, 1fr);
}
.item:nth-child(1),
.item:nth-child(3){
	grid-column: span 2;
	grid-row:  span 2;
}
.item:nth-child(2){
	grid-column:span 3;
	grid-row:  span 3;
}

.item:nth-child(5){
	grid-column: span 2;
	grid-row:  span 3;
}
.item:nth-child(6){
	grid-column: span 3;
	grid-row:  span 2;
}